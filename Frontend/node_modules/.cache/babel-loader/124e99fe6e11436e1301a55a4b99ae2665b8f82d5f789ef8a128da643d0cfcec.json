{"ast":null,"code":"var _jsxFileName = \"D:\\\\programing\\\\UW_python\\\\foodfinder_2.0\\\\Frontend\\\\src\\\\components\\\\addfood.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Addfood() {\n  _s();\n  const [data, setfooddata] = useState({\n    foodname: \"\",\n    ishot: \"\"\n  });\n\n  //using use effect to grab data\n  useEffect(() => {\n    //using fetch to grab from flask server\n    fetch('/food').then(res => res.json().then(data => {\n      console.log(data);\n      setfooddata(data);\n    }));\n  }, []);\n  const clickAddFood = () => {\n    console.log('the add food btn was clicked');\n    fetch('/addfood').then(res => {\n      const data = res.json();\n      return data;\n    }).then(data => {\n      console.log(`${data.food} has been added to the db`);\n      window.alert('Your food has been updated');\n    }).catch(error => {\n      console.log('the fetch to add food fucked up', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sectionheader\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"What food what would you like to add?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"foodForm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"foodname\",\n          children: \"Add food here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"newFood\",\n          name: \"foodname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"ishot\",\n          children: \"Is this food hot?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"isHot\",\n          name: \"ishot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addbtn\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickAddFood,\n        children: \"Add food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Addfood, \"/RXdp26Weiw1oSkVA2eF83XGuiA=\");\n_c = Addfood;\nexport default Addfood;\nvar _c;\n$RefreshReg$(_c, \"Addfood\");","map":{"version":3,"names":["React","Addfood","data","setfooddata","useState","foodname","ishot","useEffect","fetch","then","res","json","console","log","clickAddFood","food","window","alert","catch","error"],"sources":["D:/programing/UW_python/foodfinder_2.0/Frontend/src/components/addfood.js"],"sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction Addfood() {\r\n    const [data, setfooddata] = useState({\r\n        foodname: \"\",\r\n        ishot: \"\",\r\n      });\r\n    \r\n      //using use effect to grab data\r\n      useEffect(() =>{\r\n        //using fetch to grab from flask server\r\n        fetch('/food').then(\r\n          (res) =>res.json()\r\n          .then(\r\n              (data) =>\r\n              {\r\n              console.log(data);\r\n              setfooddata(data);\r\n        })\r\n        );\r\n      \r\n      }, []); \r\n    \r\n\r\n      const clickAddFood = () => {\r\n        console.log('the add food btn was clicked');\r\n        fetch('/addfood')\r\n        .then((res)=> {\r\n            const data =res.json();\r\n            return data\r\n        })\r\n        .then((data) => {\r\n            console.log(`${data. food} has been added to the db`)\r\n            window.alert('Your food has been updated')\r\n\r\n        })\r\n        .catch((error) => {\r\n\r\n            console.log('the fetch to add food fucked up', error)\r\n\r\n        })\r\n\r\n\r\n      }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"sectionheader\">\r\n            <h1>What food what would you like to add?</h1>\r\n        \r\n        </div>\r\n            <form className=\"foodForm\">\r\n                <div>\r\n                    <label for=\"foodname\">Add food here</label>\r\n                    <input type=\"text\" id=\"newFood\" name=\"foodname\"></input>\r\n                    \r\n                        <label for=\"ishot\">Is this food hot?</label>\r\n                        <input type='checkbox' id=\"isHot\" name=\"ishot\"></input>\r\n\r\n                </div>\r\n            </form>\r\n            <div className=\"addbtn\">\r\n            <button onClick={clickAddFood}>Add food</button>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Addfood;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAG1B,SAASC,OAAO,GAAG;EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC;IACjCC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC,CAAC;;EAEF;EACAC,SAAS,CAAC,MAAK;IACb;IACAC,KAAK,CAAC,OAAO,CAAC,CAACC,IAAI,CAChBC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CACjBF,IAAI,CACAP,IAAI,IACL;MACAU,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;MACjBC,WAAW,CAACD,IAAI,CAAC;IACvB,CAAC,CAAC,CACD;EAEH,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMY,YAAY,GAAG,MAAM;IACzBF,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3CL,KAAK,CAAC,UAAU,CAAC,CAChBC,IAAI,CAAEC,GAAG,IAAI;MACV,MAAMR,IAAI,GAAEQ,GAAG,CAACC,IAAI,EAAE;MACtB,OAAOT,IAAI;IACf,CAAC,CAAC,CACDO,IAAI,CAAEP,IAAI,IAAK;MACZU,OAAO,CAACC,GAAG,CAAE,GAAEX,IAAI,CAAEa,IAAK,2BAA0B,CAAC;MACrDC,MAAM,CAACC,KAAK,CAAC,4BAA4B,CAAC;IAE9C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAEdP,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEM,KAAK,CAAC;IAEzD,CAAC,CAAC;EAGJ,CAAC;EAGH,oBACI;IAAA,wBACA;MAAK,SAAS,EAAC,eAAe;MAAA,uBAC1B;QAAA,UAAI;MAAqC;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QAE5C,eACF;MAAM,SAAS,EAAC,UAAU;MAAA,uBACtB;QAAA,wBACI;UAAO,GAAG,EAAC,UAAU;UAAA,UAAC;QAAa;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC3C;UAAO,IAAI,EAAC,MAAM;UAAC,EAAE,EAAC,SAAS;UAAC,IAAI,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAS,eAEpD;UAAO,GAAG,EAAC,OAAO;UAAA,UAAC;QAAiB;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC5C;UAAO,IAAI,EAAC,UAAU;UAAC,EAAE,EAAC,OAAO;UAAC,IAAI,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IAEzD;MAAA;MAAA;MAAA;IAAA,QACH,eACP;MAAK,SAAS,EAAC,QAAQ;MAAA,uBACvB;QAAQ,OAAO,EAAEL,YAAa;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAC1C;EAAA,gBACP;AAGX;AAAC,GAlEQb,OAAO;AAAA,KAAPA,OAAO;AAqEhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}